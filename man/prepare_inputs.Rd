% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocessing.R
\name{prepare_inputs}
\alias{prepare_inputs}
\title{Restopr input preprocessing function.}
\usage{
prepare_inputs(habitat, habitat_threshold = 1, aggregation_factor = 1)
}
\arguments{
\item{habitat}{\code{\link[terra:rast]{terra::rast()}} Raster object containing binary
values that indicate if each planning unit contains habitat or not. Cells
with the value \code{1} must correspond to existing habitat. Cells with the value
\code{0} must correspond to degraded (or simply non-habitat) areas. Finally,
\code{NA} (or \code{NO_DATA}) cells are considered to be outside of the landscape.}

\item{habitat_threshold}{Number between 0 and 1 indicating, when the habitat
raster is downsampled, the minimum proportion of habitat cells (from the
original raster) are required within the downsampled raster to be considered
as habitat.}

\item{aggregation_factor}{positive integer corresponding to the level of
downsampling that will be applied to the habitat. This parameter is
important to ensure the tractability of a problem.}
}
\value{
A vector : c(downsampled_habitat, restorable_area)
}
\description{
From a binary, possibly high resolution, habitat raster, this function
produces two input rasters for restopot:
}
\details{
\itemize{
\item The binary habitat raster, which can be the same as the input
(aggregation factor = 1), but most often is a downsampled version of it,
to ensure the tractability of the problem.
\item The restorable habitat raster, which is a raster indicating how much
habitat can be restored. If the aggregation factor = 1, the the restorable
habitat raster is binary and the inverse of the habitat raster. Else, the
surface of habitat is computed according to the spatial resolution, and the
number of habitat pixel present in one larger aggregated cell.
}

TODO
}
\examples{
\dontrun{
# load data
habitat_data <- rast(
  system.file("extdata", "habitat.tif", package = "restoptr")
)
TODO
}

}
