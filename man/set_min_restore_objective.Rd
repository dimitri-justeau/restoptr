% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_min_restore_objective.R
\name{set_min_restore_objective}
\alias{set_min_restore_objective}
\title{Set an objective to minimize the amount restoration area.}
\usage{
set_min_restore_objective(problem)
}
\arguments{
\item{problem}{\code{\link[=restopt_problem]{restopt_problem()}} Restoration problem object.}
}
\value{
An updated restoration problem (\code{\link[=restopt_problem]{restopt_problem()}}) object.
}
\description{
Specify that a restoration problem (\code{\link[=restopt_problem]{restopt_problem()}}) should minimize
the restoration area needed to reach the habitat proportion threshold
specified in the problem description.
}
\details{
The restoration area corresponds to the minimum amount of area that
must be restored in the selected planning units to reach the minimum habitat
proportion threshold specified in the problem description,
}
\examples{
\dontrun{
# load data
habitat_data <- rast(
  system.file("extdata", "habitat_hi_res.tif", package = "restoptr")
)

locked_out_data <- rast(
 system.file("extdata", "locked_out.tif", package = "restoptr")
)

# plot data
plot(rast(list(habitat_data, restorable_data, locked_out_data)), nc = 3)

# create problem with locked out constraints
p <- restopt_problem(
    existing_habitat = habitat_data,
    aggregation_factor = 16,
    habitat_threshold = 0.7
  ) \%>\%
  set_min_restore_objective() \%>\%
  add_restorable_constraint(
    min_restore = 5,
    max_restore = 5,
  ) \%>\%
  add_locked_out_constraint(data = locked_out_data) \%>\%
  add_settings(time_limit = 1)

# print problem
print(p)

# solve problem
s <- solve(p)

# plot solution
plot(
  x = s, main = "solution",
  col = c("#E5E5E5", "#fff1d6", "#b2df8a", "#1f78b4")
)
}

}
